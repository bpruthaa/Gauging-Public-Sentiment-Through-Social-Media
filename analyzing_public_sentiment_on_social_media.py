# -*- coding: utf-8 -*-
"""Analyzing Public Sentiment on Social Media

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_KeT7DJW5PhiU6igmeyIbcePJjWlofV0

Analyzing Public Sentiment on Social Media
"""

# Import libraries
import tweepy (for Twitter API)  # Replace with your data acquisition method
from textblob import TextBlob
import matplotlib.pyplot as plt

# Access social media data (replace with your method)
# (For illustration, assuming Twitter API)
consumer_key = "..."  # Replace with your Twitter API credentials
consumer_secret = "..."
access_token = "..."
access_token_secret = "..."

auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)

api = tweepy.API(auth)

# Define search query and collect tweets
search_query = "#data science"
tweets = api.search(q=search_query, count=100, lang="en")

# Clean and pre-process text data
cleaned_tweets = []
for tweet in tweets:
  text = tweet.text.lower()  # Convert to lowercase
  text = text.replace("#", "")  # Remove hashtags
  text = text.strip()  # Remove leading/trailing whitespace
  cleaned_tweets.append(text)

# Sentiment Analysis using TextBlob
sentiment = []
for tweet in cleaned_tweets:
  blob = TextBlob(tweet)
  sentiment.append(blob.sentiment.polarity)

# Analyze sentiment distribution
positive = sum(sentiment) > 0
negative = sum(sentiment) < 0
neutral = len(sentiment) - (positive + negative)

# Create pie chart for sentiment distribution
plt.figure(figsize=(8, 8))
plt.pie([positive, negative, neutral], labels=["Positive", "Negative", "Neutral"], autopct="%1.1f%%", startangle=140)
plt.title("Sentiment Distribution for #data science Tweets")
plt.axis("equal")  # Equal aspect ratio for a circular pie chart
plt.show()